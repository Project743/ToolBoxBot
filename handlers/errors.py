from aiogram import Router
from aiogram.types import ErrorEvent
from aiogram_dialog.api.exceptions import UnknownIntent
import logging
from aiogram.utils.i18n import I18n, SimpleI18nMiddleware
from keyboards import startkb

error_router = Router()

@error_router.error()
async def error_handler(event: ErrorEvent):
    exception = event.exception
    update = event.update

    # üëâ –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã—Ç–∞—â–∏—Ç—å –ª–æ–∫–∞–ª—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å SimpleI18nMiddleware)
    locale = None
    if hasattr(update, "from_user"):
        locale = update.from_user.language_code
    elif hasattr(update, "message") and update.message:
        locale = update.message.from_user.language_code
    elif hasattr(update, "callback_query") and update.callback_query:
        locale = update.callback_query.from_user.language_code

    # –§–æ–ª–±—ç–∫ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
    def _(text): return text

    if locale:
        # –¢—É—Ç –ø–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π —Å–ø–æ—Å–æ–± –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ I18n
        i18n = I18n(domain="messages", path="locales")
        _ = i18n.gettext

    if isinstance(exception, UnknownIntent):
        logging.info("UnknownIntent –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")

        text = _("button_is_outdated")
        reply_markup = startkb.start_kb(_)

        if update.callback_query:
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await update.callback_query.message.delete()
            except Exception as e:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

            await update.callback_query.message.answer(text, reply_markup=reply_markup)

        elif update.message:
            await update.message.answer(text, reply_markup=reply_markup)

        return True

    logging.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {exception}", exc_info=True)
    return False
